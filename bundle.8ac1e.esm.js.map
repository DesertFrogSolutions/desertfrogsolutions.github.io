{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../src/index.js","webpack:///./index.js","webpack:///../src/util.js","webpack:///../src/create-element.js","webpack:///../src/component.js","webpack:///../src/diff/children.js","webpack:///../src/diff/props.js","webpack:///../src/diff/index.js","webpack:///../src/render.js","webpack:///../src/clone-element.js","webpack:///../src/create-context.js","webpack:///../src/constants.js","webpack:///../src/options.js","webpack:///../src/diff/catch-error.js","webpack:///../node_modules/preact-cli/lib/lib/entry.js","webpack:///./components/app.js"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getHookState","index","type","options","currentComponent","currentHook","hooks","__","__h","length","push","useState","initialState","reducer","init","hookState","currentIndex","_reducer","invokeOrReturn","action","nextValue","setState","useReducer","flushAfterPaintEffects","component","afterPaintEffects","shift","forEach","invokeCleanup","invokeEffect","e","hook","comp","cleanup","arg","f","prevRaf","oldBeforeDiff","oldBeforeRender","oldAfterDiff","diffed","oldCommit","oldBeforeUnmount","unmount","vnode","requestAnimationFrame","callback","raf","done","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","setTimeout","commitQueue","some","filter","cb","hasErrored","App","assign","obj","props","removeNode","node","parentNode","removeChild","createElement","children","ref","normalizedProps","arguments","slice","defaultProps","createVNode","original","__b","__e","__d","undefined","constructor","vnodeId","createRef","current","Fragment","Component","context","getDomSibling","childIndex","indexOf","sibling","updateParentDomPointers","child","base","enqueueRender","rerenderQueue","process","prevDebounce","debounceRendering","defer","queue","sort","a","b","oldVNode","oldDom","parentDom","diff","ownerSVGElement","commitRoot","diffChildren","renderResult","newParentVNode","oldParentVNode","globalContext","isSvg","excessDomChildren","isHydrating","j","childVNode","newDom","firstChildDom","refs","oldChildren","EMPTY_ARR","oldChildrenLength","Array","isArray","EMPTY_OBJ","reorderChildren","placeChild","applyRef","tmp","toChildArray","out","nextDom","sibDom","outer","appendChild","nextSibling","insertBefore","setStyle","style","setProperty","IS_NON_DIMENSIONAL","test","dom","oldValue","useCapture","cssText","replace","toLowerCase","_listeners","addEventListener","eventProxyCapture","eventProxy","removeEventListener","setAttribute","removeAttribute","event","newVNode","isNew","oldProps","oldState","snapshot","clearProcessingException","newProps","provider","componentContext","newType","contextType","render","doRender","sub","state","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","diffElementNodes","root","oldHtml","newHtml","nodeType","localName","document","createTextNode","createElementNS","is","data","childNodes","dangerouslySetInnerHTML","attributes","innerHTML","hydrate","diffProps","checked","parentVNode","skipRemove","componentWillUnmount","this","replaceNode","firstChild","cloneElement","createContext","defaultValue","contextId","__c","Consumer","contextValue","Provider","subs","ctx","_props","old","splice","isValidElement","error","ctor","handled","getDerivedStateFromError","componentDidCatch","update","forceUpdate","Promise","then","resolve","h","Preact","interopDefault","default","normalizeURL","url","navigator","serviceWorker","register","__webpack_public_path__","require","getElementById","body","firstElementChild","app","preRenderData","inlineDataElement","querySelector","JSON","parse","decodeURI","CLI_DATA","currentURL","location","pathname","FailureMessage","class","SuccessMessage","nameparts","split","thisname","href","onclick","Calendly","initPopupWidget","prefill","email","Header","userName","setUserName","userEmail","setUserEmail","success","setSuccess","failure","setFailure","id","method","enctype","onSubmit","preventDefault","formData","FormData","target","fetch","headers","Accept","response","status","catch","console","log","maxlength","placeholder","required","onChange"],"mappings":"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","file":"bundle.8ac1e.esm.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"mdyV\");\n","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\thooks._pendingEffects = [];\n\t}\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks && c.__hooks._pendingEffects.length) {\n\t\tafterPaint(afterPaintEffects.push(c));\n\t}\n\tcurrentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = hookState._reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') ref(createHandle());\n\t\t\telse if (ref) ref.current = createHandle();\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","import './style';\nimport App from './components/app';\n\nexport default App;\n","import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb: () => void) => void}\n */\n/* istanbul ignore next */\n// Note the following line isn't tree-shaken by rollup cuz of rollup/rollup#2566\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tnull,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldParentVNode, i + 1);\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tvnode,\n\t\t\t\t\tvnode,\n\t\t\t\t\tc,\n\t\t\t\t\tvnode._dom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 2\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink[H:h]/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (\n\t\t\tvalue != null &&\n\t\t\t(value !== false || (name[0] === 'a' && name[1] === 'r'))\n\t\t) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif ((tmp = options._render)) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(r[i], parentVNode, typeof vnode.type != 'function');\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) removeNode(vnode._dom);\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function(_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(enqueueRender);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType = context);\n}\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n */\nexport function _catchError(error, vnode) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","/* global __webpack_public_path__ */\n\nimport * as Preact from 'preact';\nconst { h, render, hydrate } = Preact;\n\nconst interopDefault = m => (m && m.default ? m.default : m);\n\nconst normalizeURL = url => (url[url.length - 1] === '/' ? url : url + '/');\n\nif (process.env.NODE_ENV === 'development') {\n\t// enable preact devtools\n\trequire('preact/debug');\n\n\t// only add a debug sw if webpack service worker is not requested.\n\tif (process.env.ADD_SW === undefined && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) + 'sw-debug.js'\n\t\t);\n\t} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t\t);\n\t}\n} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\tnavigator.serviceWorker.register(\n\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t);\n}\n\nlet app = interopDefault(require('preact-cli-entrypoint'));\n\nif (typeof app === 'function') {\n\tlet root =\n\t\tdocument.getElementById('preact_root') || document.body.firstElementChild;\n\n\tlet init = () => {\n\t\tlet app = interopDefault(require('preact-cli-entrypoint'));\n\t\tlet preRenderData = {};\n\t\tconst inlineDataElement = document.querySelector(\n\t\t\t'[type=\"__PREACT_CLI_DATA__\"]'\n\t\t);\n\t\tif (inlineDataElement) {\n\t\t\tpreRenderData =\n\t\t\t\tJSON.parse(decodeURI(inlineDataElement.innerHTML)).preRenderData ||\n\t\t\t\tpreRenderData;\n\t\t}\n\t\t/* An object named CLI_DATA is passed as a prop,\n\t\t * this keeps us future proof if in case we decide,\n\t\t * to send other data like at some point in time.\n\t\t */\n\t\tconst CLI_DATA = { preRenderData };\n\t\tconst currentURL = preRenderData.url ? normalizeURL(preRenderData.url) : '';\n\t\tconst canHydrate =\n\t\t\tprocess.env.PRERENDER &&\n\t\t\tprocess.env.NODE_ENV === 'production' &&\n\t\t\thydrate &&\n\t\t\tcurrentURL === normalizeURL(location.pathname);\n\t\tconst doRender = canHydrate ? hydrate : render;\n\t\tdoRender(h(app, { CLI_DATA }), document.body, root);\n\t};\n\n\tif (module.hot) module.hot.accept('preact-cli-entrypoint', init);\n\n\tinit();\n}\n","import { Fragment, render } from 'preact';\n// import { Router } from 'preact-router';\n\n// Code-splitting is automated for `routes` directory\n// import Home from '../routes/home';\n// import Profile from '../routes/profile';\nimport { useState } from 'preact/hooks';\nfunction FailureMessage(props) {\n\treturn (\n\t\t\t<div class=\"error-message w-form-fail container w-container\">\n\t\t\t<p>Sorry{props.name ? ` ${props.name}` : \"\"}, something went wrong while submitting the form.<br />Try again</p>\n\t\t\t</div>\n\t);\n}\nfunction summonCalendly(name, email) {\n    Calendly.initPopupWidget(\n        {\n            url: 'https://calendly.com/jgoldfar/intro',\n            prefill: {\n                name: name,\n                email: email\n            }\n        }\n    );\n    return false;\n}\nfunction SuccessMessage(props) {\n\n\t// <div class=\"w-widget-twitter-count-shim w--vertical\" aria-hidden=\"true\">\n\t// <div class=\"w-widget-twitter-count-inner\">...</div>\n\t// </div>\n\t// <div class=\"w-widget-twitter-count-clear\"></div><iframe title=\"Twitter Tweet Button\" allowtransparency=\"true\" frameborder=\"0\" scrolling=\"no\" src=\"https://platform.twitter.com/widgets/tweet_button.html\" style=\"border: none; height: 20px; overflow: hidden; width: 73px;\"></iframe>\n\t// </div>\n\t// <div class=\"share-button facebook w-widget w-widget-facebook\"><iframe title=\"Facebook Like Button\" src=\"https://www.facebook.com/plugins/like.php\" scrolling=\"no\" frameborder=\"0\" allowtransparency=\"true\" style=\"border: none; overflow: hidden; width: 55px; height: 65px;\"></iframe></div>\n    // <p class=\"referal-text\">Help spread the word:</p>\n    const nameparts = props.name ? props.name.split(' ') : [\"\",\"\"];\n    const thisname = ((nameparts.length == 2) && nameparts[0]) ? nameparts[0] : props.name;\n\treturn (\n        <Fragment>\n\t\t  <div class=\"success-message w-form-done container w-container\">\n\t\t\t<p>Awesome, {thisname ? ` ${thisname}` : \"\"}! Thank you for your inquiry. We will get back to you as soon as possible!</p>\n            <p>Schedule a call with us at your convenience <a href=\"#\" onclick={() => {summonCalendly(props.name, props.email);}}>with Calendly</a></p>\n          </div>\n        </Fragment>\n\t);\n}\nfunction Header() {\n    // <li>Have you struggled to achieve your commitments?</li>\n    return (\n        <Fragment>\n\t\t  <h1 class=\"heading\">Desert Frog Solutions</h1>\n\t\t  <p class=\"subtitle\">\n            Partnering with visionaries, creators, and organizations making an impact.<br />\n            Delivering IT and data solutions that empower success.<br />\n          </p>\n\t\t  <p class=\"subtitle questiontext\">\n            Our mission is to help professionals discover opportunities, stay competitive, and achieve through innovative, robust, and scalable solutions that fit their challenges.\n          </p>\n          <p class=\"subtitle questiontext\">\n\t\t\t<ul>\n              <li>Do you need state-of-the-art, reliable, and cost-effective results?</li>\n\t\t\t  <li>Do you want to understand and upgrade your systems?</li>\n\t\t\t  <li>Do you need resources and expertise to advance your vision?</li>\n\t\t\t</ul>\n\t\t  </p>\n\t\t  <p class=\"subtitle\">\n            You need to stand out.<br />\n            We want to make it happen.<br />\n          </p>\n        </Fragment>\n    );\n}\n// globals/functions used in app interactivity\nconst timeToShowFailure = 3000;\nfunction App() {\n    const [userName, setUserName] = useState(\"\");\n    const [userEmail, setUserEmail] = useState(\"\");\n    const [success, setSuccess] = useState(false);\n    const [failure, setFailure] = useState(false);\n    const setName = (event) => {setUserName(event.target.value); console.log(userName);/* console.log(event); */};\n    const setEmail = (event) => {setUserEmail(event.target.value); console.log(userEmail);};\n    const submitForm = (event) => {\n        // console.log(event);\n        event.preventDefault();\n        // const form = document.getElementById(\"email-form\");\n        const formData = new FormData(event.target);\n        return fetch(\"https://usebasin.com/f/c5e3a00dbed9\", {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n            },\n            body: formData,\n        })\n        // return new Promise((resolve, reject) => {\n        // //    // resolve({status: 400});\n        //    resolve({status: 200});\n        // //    // reject('an error occurred');\n        // })\n            .then((response) => {\n                if (response.status === 200) {\n                    setSuccess(true);\n                } else {\n                    setFailure(true);\n                    setTimeout(() => {setFailure(false);}, timeToShowFailure);\n                }\n            })\n            .catch((error) => {\n              setFailure(true);\n              console.log(error);\n              setTimeout(() => {setFailure(false);}, timeToShowFailure);\n            });\n    };\n    // ID for element being hydrated must be \"preact_root\"\n    // https://github.com/preactjs/preact-cli/issues/1330\n\treturn (\n        <div id=\"preact_root\">\n          <div class=\"header-section wf-section\">\n\t\t\t<div class=\"container w-container\">\n              <Header />\n              {success ? <SuccessMessage name={userName} email={userEmail} /> : \"\"}\n\t\t\t  <div class=\"sign-up-form w-form\" style={success ? 'display: none;' : ''}>\n\t\t\t    <form name=\"wf-form-signup-form\" data-name=\"Signup Form\" id=\"email-form\" action=\"\" method=\"post\" enctype=\"multipart/form-data\" class=\"w-clearfix\" onSubmit={submitForm}>\n\t\t\t      <input type=\"text\" class=\"field fieldfullwidth w-input\" maxlength=\"256\" name=\"Name\" data-name=\"Name\" placeholder=\"Enter your name (*)\" id=\"Name\" required=\"true\" onChange={setName} />\n\t\t\t      <textarea placeholder=\"Share your project, product, or challenge. Or just say Hi!\" maxlength=\"5000\" id=\"Challenge\" name=\"Challenge\" required=\"\" data-name=\"field\" class=\"field fieldfullwidth fieldenterchallenge w-input\"></textarea>\n\t\t\t      <input type=\"email\" class=\"field w-input\" maxlength=\"256\" name=\"email\" data-name=\"Email\" placeholder=\"Enter your email address (*)\" id=\"field\" onChange={setEmail} required=\"true\" />\n\t\t\t      <input type=\"submit\" value=\"Contact Us\" data-wait=\"Please wait...\" class=\"button w-button\" />\n\t\t\t    </form>\n\t\t\t  </div>\n              {failure ? <FailureMessage name={userName} /> : \"\"}\n            </div>\n          </div>\n\t\t</div>\n\t);\n}\n// original demo app:\n// const App = () => (\n// \t<div id=\"app\">\n// \t\t<Header />\n// \t\t<Router>\n// \t\t\t<Home path=\"/\" />\n// \t\t\t<Profile path=\"/profile/\" user=\"me\" />\n// \t\t\t<Profile path=\"/profile/:user\" />\n// \t\t</Router>\n// \t</div>\n// )\n\nexport default App;\n"],"sourceRoot":""}